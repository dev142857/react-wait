{"version":3,"file":"use-wait.umd.js","sources":["../src/api.js","../src/index.js"],"sourcesContent":["export const anyWaiting = waiters => waiters.size > 0;\n\nexport const isWaiting = (waiters, waiter) => waiters.has(waiter);\n\nexport const startWaiting = (waiters, waiter) => {\n  waiters.add(waiter);\n  return waiters;\n};\n\nexport const endWaiting = (waiters, waiter) => {\n  waiters.delete(waiter);\n  return waiters;\n};\n","import React, { useState, useContext } from \"react\";\nimport { anyWaiting, isWaiting, startWaiting, endWaiting } from \"./api\";\n\nconst WaitingContext = React.createContext();\n\nfunction Wait(props) {\n  const context = useContext(WaitingContext);\n  return context.waiters.has(props.message)\n    ? props.waiting\n    : props.children;\n}\n\nexport function Waiter(props) {\n  const [waiters, setWaiters] = useState(new Set([]));\n\n  return (\n    <WaitingContext.Provider\n      value={{\n        waiters,\n        createWaitingContext: waiter => ({\n          isWaiting: () => isWaiting(waiters, waiter),\n          startWaiting: () => setWaiters(startWaiting(waiters, waiter)),\n          endWaiting: () => setWaiters(endWaiting(waiters, waiter)),\n          Wait: (props) => (<Wait message={waiter} {...props}/>)\n        }),\n        anyWaiting: () => anyWaiting(waiters),\n        isWaiting: waiter => isWaiting(waiters, waiter),\n        startWaiting(waiter) {\n          setWaiters(startWaiting(waiters, waiter));\n        },\n        endWaiting(waiter) {\n          setWaiters(endWaiting(waiters, waiter));\n        }\n      }}\n    >\n      {props.children}\n    </WaitingContext.Provider>\n  );\n}\n\nexport function useWait() {\n  const context = useContext(WaitingContext);\n  return {\n    ...context,\n    waiters: [...context.waiters],\n    Wait\n  };\n}\n"],"names":["anyWaiting","waiters","size","isWaiting","waiter","has","startWaiting","add","endWaiting","delete","WaitingContext","React","createContext","Wait","props","useContext","message","waiting","children","useState","Set"],"mappings":"gPAAaA,WAAaC,UAAWA,EAAQC,KAAO,GAEvCC,WAAaF,EAASG,UAAWH,EAAQI,IAAID,IAE7CE,WAAgBL,EAASG,GAEpC,OADAH,EAAQM,IAAIH,GACLH,GAGIO,WAAcP,EAASG,GAElC,OADAH,EAAQQ,OAAOL,GACRH,GCRHS,EAAiBC,EAAMC,gBAE7B,SAASC,EAAKC,GAEZ,OADgBC,aAAWL,GACZT,QAAQI,IAAIS,EAAME,SAC7BF,EAAMG,QACNH,EAAMI,kBAGL,SAAgBJ,GACrB,MAA8BK,WAAS,IAAIC,IAAI,mBAE/C,4FA0BMjB,oIAGKW,UAAIH,gBAAQE"}